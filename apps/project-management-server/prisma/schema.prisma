datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Project {
  createdAt   DateTime  @default(now())
  description String?
  endDate     DateTime?
  id          String    @id @default(cuid())
  name        String?
  startDate   DateTime?
  updatedAt   DateTime  @updatedAt
}

model Issue {
  assignee    String?
  comments    Comment[]
  createdAt   DateTime           @default(now())
  description String?
  dueDate     DateTime?
  id          String             @id @default(cuid())
  labels      EnumIssueLabels[]
  priority    EnumIssuePriority?
  reporter    String?
  status      EnumIssueStatus?
  title       String?
  updatedAt   DateTime           @updatedAt
}

model Label {
  color     String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  name      String?
  updatedAt DateTime @updatedAt
}

model Comment {
  author    String?
  content   String?
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  issue     Issue?   @relation(fields: [issueId], references: [id])
  issueId   String?
  updatedAt DateTime @updatedAt
}

model Sprint {
  createdAt DateTime          @default(now())
  endDate   DateTime?
  goal      String?
  id        String            @id @default(cuid())
  startDate DateTime?
  status    EnumSprintStatus?
  updatedAt DateTime          @updatedAt
}

model User {
  createdAt DateTime @default(now())
  email     String?  @unique
  firstName String?
  id        String   @id @default(cuid())
  lastName  String?
  password  String
  roles     Json
  updatedAt DateTime @updatedAt
  username  String   @unique
}

enum EnumIssueLabels {
  Option1
}

enum EnumIssuePriority {
  Option1
}

enum EnumIssueStatus {
  Option1
}

enum EnumSprintStatus {
  Option1
}
