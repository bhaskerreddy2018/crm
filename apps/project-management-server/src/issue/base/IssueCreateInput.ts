/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsDate,
  IsEnum,
} from "class-validator";
import { CommentCreateNestedManyWithoutIssuesInput } from "./CommentCreateNestedManyWithoutIssuesInput";
import { Type } from "class-transformer";
import { EnumIssueLabels } from "./EnumIssueLabels";
import { EnumIssuePriority } from "./EnumIssuePriority";
import { EnumIssueStatus } from "./EnumIssueStatus";

@InputType()
class IssueCreateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  assignee?: string | null;

  @ApiProperty({
    required: false,
    type: () => CommentCreateNestedManyWithoutIssuesInput,
  })
  @ValidateNested()
  @Type(() => CommentCreateNestedManyWithoutIssuesInput)
  @IsOptional()
  @Field(() => CommentCreateNestedManyWithoutIssuesInput, {
    nullable: true,
  })
  comments?: CommentCreateNestedManyWithoutIssuesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dueDate?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumIssueLabels,
    isArray: true,
  })
  @IsEnum(EnumIssueLabels, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumIssueLabels], {
    nullable: true,
  })
  labels?: Array<"Option1">;

  @ApiProperty({
    required: false,
    enum: EnumIssuePriority,
  })
  @IsEnum(EnumIssuePriority)
  @IsOptional()
  @Field(() => EnumIssuePriority, {
    nullable: true,
  })
  priority?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  reporter?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumIssueStatus,
  })
  @IsEnum(EnumIssueStatus)
  @IsOptional()
  @Field(() => EnumIssueStatus, {
    nullable: true,
  })
  status?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;
}

export { IssueCreateInput as IssueCreateInput };
